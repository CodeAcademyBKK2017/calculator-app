7862284ed4c736cf432927e49cde164f
require('react-native');
var _BaseView=require('../BaseView.component');var _BaseView2=_interopRequireDefault(_BaseView);
var _react=require('react');var _react2=_interopRequireDefault(_react);


var _reactTestRenderer=require('react-test-renderer');var _reactTestRenderer2=_interopRequireDefault(_reactTestRenderer);
var _enzyme=require('enzyme');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

describe('App',function(){
var wrapper=void 0,instance=void 0;

beforeEach(function(){
wrapper=(0,_enzyme.shallow)(_react2.default.createElement(_BaseView2.default,null));
instance=wrapper.instance();
instance._setFirstnum(2);
instance._setSecondnum(2);
});

it('renders Defination',function(){
var tree=_reactTestRenderer2.default.create(_react2.default.createElement(_BaseView2.default,null));
expect(tree).toBeDefined();
});

it('BaseView: renders correctly',function(){
var tree=_reactTestRenderer2.default.create(_react2.default.createElement(_BaseView2.default,null)).toJSON();
expect(tree).toMatchSnapshot();
});

it('BaseView: setFirstnum must set in state',function(){
instance._setFirstnum(1);
expect(instance.state.Firstnum).toEqual(1);
});

it('BaseView: setSecondnum must set in state',function(){
instance._setSecondnum(1);
expect(instance.state.Secondnum).toEqual(1);
});

it('BaseView: clearResultFunc must clear result state',function(){
instance._clearResultFunc();
expect(instance.state.result).toEqual(0);
});

it('BaseView: plusOparateFunc must summation correct',function(){
expect(instance.state.result).toEqual(0);
instance._plusOparateFunc();
expect(instance.state.result).toEqual(4);
});

it('BaseView: minusOparateFunc must subtraction correct',function(){
expect(instance.state.result).toEqual(0);
instance._minusOparateFunc();
expect(instance.state.result).toEqual(0);
});

it('BaseView: multiplyOparateFunc must multiplying correct',function(){
expect(instance.state.result).toEqual(0);
instance._multiplyOparateFunc();
expect(instance.state.result).toEqual(4);
});
it('BaseView: divideOparateFunc must dividing correct',function(){
expect(instance.state.result).toEqual(0);
instance._divideOparateFunc();
expect(instance.state.result).toEqual(1);
});

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UudGVzdC5qcyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIndyYXBwZXIiLCJpbnN0YW5jZSIsImJlZm9yZUVhY2giLCJfc2V0Rmlyc3RudW0iLCJfc2V0U2Vjb25kbnVtIiwiaXQiLCJ0cmVlIiwiY3JlYXRlIiwiZXhwZWN0IiwidG9CZURlZmluZWQiLCJ0b0pTT04iLCJ0b01hdGNoU25hcHNob3QiLCJzdGF0ZSIsIkZpcnN0bnVtIiwidG9FcXVhbCIsIlNlY29uZG51bSIsIl9jbGVhclJlc3VsdEZ1bmMiLCJyZXN1bHQiLCJfcGx1c09wYXJhdGVGdW5jIiwiX21pbnVzT3BhcmF0ZUZ1bmMiLCJfbXVsdGlwbHlPcGFyYXRlRnVuYyIsIl9kaXZpZGVPcGFyYXRlRnVuYyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSwrQztBQUNBLDRCOzs7QUFHQSxzRDtBQUNBLDhCOztBQUVBQSxTQUFTLEtBQVQsQ0FBZ0IsVUFBTTtBQUNwQixHQUFJQyxlQUFKLENBQWFDLGVBQWI7O0FBRUFDLFdBQVcsVUFBTTtBQUNmRixRQUFVLG9CQUFRLHNEQUFSLENBQVY7QUFDQUMsU0FBV0QsUUFBUUMsUUFBUixFQUFYO0FBQ0FBLFNBQVNFLFlBQVQsQ0FBc0IsQ0FBdEI7QUFDQUYsU0FBU0csYUFBVCxDQUF1QixDQUF2QjtBQUNELENBTEQ7O0FBT0FDLEdBQUcsb0JBQUgsQ0FBeUIsVUFBTTtBQUM3QixHQUFNQyxNQUFPLDRCQUFTQyxNQUFULENBQWdCLHNEQUFoQixDQUFiO0FBQ0FDLE9BQU9GLElBQVAsRUFBYUcsV0FBYjtBQUNELENBSEQ7O0FBS0FKLEdBQUcsNkJBQUgsQ0FBa0MsVUFBTTtBQUN0QyxHQUFNQyxNQUFPLDRCQUFTQyxNQUFULENBQWdCLHNEQUFoQixFQUE4QkcsTUFBOUIsRUFBYjtBQUNBRixPQUFPRixJQUFQLEVBQWFLLGVBQWI7QUFDRCxDQUhEOztBQUtBTixHQUFHLHlDQUFILENBQThDLFVBQU07QUFDbERKLFNBQVNFLFlBQVQsQ0FBc0IsQ0FBdEI7QUFDQUssT0FBT1AsU0FBU1csS0FBVCxDQUFlQyxRQUF0QixFQUFnQ0MsT0FBaEMsQ0FBd0MsQ0FBeEM7QUFDRCxDQUhEOztBQUtBVCxHQUFHLDBDQUFILENBQStDLFVBQU07QUFDbkRKLFNBQVNHLGFBQVQsQ0FBdUIsQ0FBdkI7QUFDQUksT0FBT1AsU0FBU1csS0FBVCxDQUFlRyxTQUF0QixFQUFpQ0QsT0FBakMsQ0FBeUMsQ0FBekM7QUFDRCxDQUhEOztBQUtBVCxHQUFHLG1EQUFILENBQXdELFVBQU07QUFDNURKLFNBQVNlLGdCQUFUO0FBQ0FSLE9BQU9QLFNBQVNXLEtBQVQsQ0FBZUssTUFBdEIsRUFBOEJILE9BQTlCLENBQXNDLENBQXRDO0FBQ0QsQ0FIRDs7QUFLQVQsR0FBRyxrREFBSCxDQUF1RCxVQUFNO0FBQzNERyxPQUFPUCxTQUFTVyxLQUFULENBQWVLLE1BQXRCLEVBQThCSCxPQUE5QixDQUFzQyxDQUF0QztBQUNBYixTQUFTaUIsZ0JBQVQ7QUFDQVYsT0FBT1AsU0FBU1csS0FBVCxDQUFlSyxNQUF0QixFQUE4QkgsT0FBOUIsQ0FBc0MsQ0FBdEM7QUFDRCxDQUpEOztBQU1BVCxHQUFHLHFEQUFILENBQTBELFVBQU07QUFDOURHLE9BQU9QLFNBQVNXLEtBQVQsQ0FBZUssTUFBdEIsRUFBOEJILE9BQTlCLENBQXNDLENBQXRDO0FBQ0FiLFNBQVNrQixpQkFBVDtBQUNBWCxPQUFPUCxTQUFTVyxLQUFULENBQWVLLE1BQXRCLEVBQThCSCxPQUE5QixDQUFzQyxDQUF0QztBQUNELENBSkQ7O0FBTUFULEdBQUcsd0RBQUgsQ0FBNkQsVUFBTTtBQUNqRUcsT0FBT1AsU0FBU1csS0FBVCxDQUFlSyxNQUF0QixFQUE4QkgsT0FBOUIsQ0FBc0MsQ0FBdEM7QUFDQWIsU0FBU21CLG9CQUFUO0FBQ0FaLE9BQU9QLFNBQVNXLEtBQVQsQ0FBZUssTUFBdEIsRUFBOEJILE9BQTlCLENBQXNDLENBQXRDO0FBQ0QsQ0FKRDtBQUtBVCxHQUFHLG1EQUFILENBQXdELFVBQU07QUFDNURHLE9BQU9QLFNBQVNXLEtBQVQsQ0FBZUssTUFBdEIsRUFBOEJILE9BQTlCLENBQXNDLENBQXRDO0FBQ0FiLFNBQVNvQixrQkFBVDtBQUNBYixPQUFPUCxTQUFTVyxLQUFULENBQWVLLE1BQXRCLEVBQThCSCxPQUE5QixDQUFzQyxDQUF0QztBQUNELENBSkQ7O0FBTUQsQ0ExREQiLCJmaWxlIjoiYmFzZS50ZXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IEJhc2VWaWV3IGZyb20gJy4uL0Jhc2VWaWV3LmNvbXBvbmVudCc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG4vLyBOb3RlOiB0ZXN0IHJlbmRlcmVyIG11c3QgYmUgcmVxdWlyZWQgYWZ0ZXIgcmVhY3QtbmF0aXZlLlxuaW1wb3J0IHJlbmRlcmVyIGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInO1xuaW1wb3J0IHtzaGFsbG93fSBmcm9tICdlbnp5bWUnO1xuXG5kZXNjcmliZSgnQXBwJywgKCkgPT4ge1xuICBsZXQgd3JhcHBlciwgaW5zdGFuY2U7XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgd3JhcHBlciA9IHNoYWxsb3coPEJhc2VWaWV3Lz4pO1xuICAgIGluc3RhbmNlID0gd3JhcHBlci5pbnN0YW5jZSgpO1xuICAgIGluc3RhbmNlLl9zZXRGaXJzdG51bSgyKTtcbiAgICBpbnN0YW5jZS5fc2V0U2Vjb25kbnVtKDIpO1xuICB9KTtcblxuICBpdCgncmVuZGVycyBEZWZpbmF0aW9uJywgKCkgPT4ge1xuICAgIGNvbnN0IHRyZWUgPSByZW5kZXJlci5jcmVhdGUoPEJhc2VWaWV3IC8+KTtcbiAgICBleHBlY3QodHJlZSkudG9CZURlZmluZWQoKTtcbiAgfSk7XG5cbiAgaXQoJ0Jhc2VWaWV3OiByZW5kZXJzIGNvcnJlY3RseScsICgpID0+IHtcbiAgICBjb25zdCB0cmVlID0gcmVuZGVyZXIuY3JlYXRlKDxCYXNlVmlldyAvPikudG9KU09OKCk7XG4gICAgZXhwZWN0KHRyZWUpLnRvTWF0Y2hTbmFwc2hvdCgpO1xuICB9KTtcblxuICBpdCgnQmFzZVZpZXc6IHNldEZpcnN0bnVtIG11c3Qgc2V0IGluIHN0YXRlJywgKCkgPT4ge1xuICAgIGluc3RhbmNlLl9zZXRGaXJzdG51bSgxKTtcbiAgICBleHBlY3QoaW5zdGFuY2Uuc3RhdGUuRmlyc3RudW0pLnRvRXF1YWwoMSk7XG4gIH0pO1xuXG4gIGl0KCdCYXNlVmlldzogc2V0U2Vjb25kbnVtIG11c3Qgc2V0IGluIHN0YXRlJywgKCkgPT4ge1xuICAgIGluc3RhbmNlLl9zZXRTZWNvbmRudW0oMSk7XG4gICAgZXhwZWN0KGluc3RhbmNlLnN0YXRlLlNlY29uZG51bSkudG9FcXVhbCgxKTtcbiAgfSk7XG5cbiAgaXQoJ0Jhc2VWaWV3OiBjbGVhclJlc3VsdEZ1bmMgbXVzdCBjbGVhciByZXN1bHQgc3RhdGUnLCAoKSA9PiB7XG4gICAgaW5zdGFuY2UuX2NsZWFyUmVzdWx0RnVuYygpO1xuICAgIGV4cGVjdChpbnN0YW5jZS5zdGF0ZS5yZXN1bHQpLnRvRXF1YWwoMCk7XG4gIH0pO1xuXG4gIGl0KCdCYXNlVmlldzogcGx1c09wYXJhdGVGdW5jIG11c3Qgc3VtbWF0aW9uIGNvcnJlY3QnLCAoKSA9PiB7XG4gICAgZXhwZWN0KGluc3RhbmNlLnN0YXRlLnJlc3VsdCkudG9FcXVhbCgwKTtcbiAgICBpbnN0YW5jZS5fcGx1c09wYXJhdGVGdW5jKCk7XG4gICAgZXhwZWN0KGluc3RhbmNlLnN0YXRlLnJlc3VsdCkudG9FcXVhbCg0KTtcbiAgfSk7XG5cbiAgaXQoJ0Jhc2VWaWV3OiBtaW51c09wYXJhdGVGdW5jIG11c3Qgc3VidHJhY3Rpb24gY29ycmVjdCcsICgpID0+IHtcbiAgICBleHBlY3QoaW5zdGFuY2Uuc3RhdGUucmVzdWx0KS50b0VxdWFsKDApO1xuICAgIGluc3RhbmNlLl9taW51c09wYXJhdGVGdW5jKCk7XG4gICAgZXhwZWN0KGluc3RhbmNlLnN0YXRlLnJlc3VsdCkudG9FcXVhbCgwKTtcbiAgfSk7XG5cbiAgaXQoJ0Jhc2VWaWV3OiBtdWx0aXBseU9wYXJhdGVGdW5jIG11c3QgbXVsdGlwbHlpbmcgY29ycmVjdCcsICgpID0+IHtcbiAgICBleHBlY3QoaW5zdGFuY2Uuc3RhdGUucmVzdWx0KS50b0VxdWFsKDApO1xuICAgIGluc3RhbmNlLl9tdWx0aXBseU9wYXJhdGVGdW5jKCk7XG4gICAgZXhwZWN0KGluc3RhbmNlLnN0YXRlLnJlc3VsdCkudG9FcXVhbCg0KTtcbiAgfSk7XG4gIGl0KCdCYXNlVmlldzogZGl2aWRlT3BhcmF0ZUZ1bmMgbXVzdCBkaXZpZGluZyBjb3JyZWN0JywgKCkgPT4ge1xuICAgIGV4cGVjdChpbnN0YW5jZS5zdGF0ZS5yZXN1bHQpLnRvRXF1YWwoMCk7XG4gICAgaW5zdGFuY2UuX2RpdmlkZU9wYXJhdGVGdW5jKCk7XG4gICAgZXhwZWN0KGluc3RhbmNlLnN0YXRlLnJlc3VsdCkudG9FcXVhbCgxKTtcbiAgfSk7XG5cbn0pO1xuIl19