bdd9727cb5fdda032793554fd9879e3f












'use strict';






function stiffnessFromOrigamiValue(oValue){
return(oValue-30)*3.62+194;
}

function dampingFromOrigamiValue(oValue){
return(oValue-8)*3+25;
}

function fromOrigamiTensionAndFriction(
tension,
friction)
{
return{
stiffness:stiffnessFromOrigamiValue(tension),
damping:dampingFromOrigamiValue(friction)};

}

function fromBouncinessAndSpeed(
bounciness,
speed)
{
function normalize(value,startValue,endValue){
return(value-startValue)/(endValue-startValue);
}

function projectNormal(n,start,end){
return start+n*(end-start);
}

function linearInterpolation(t,start,end){
return t*end+(1-t)*start;
}

function quadraticOutInterpolation(t,start,end){
return linearInterpolation(2*t-t*t,start,end);
}

function b3Friction1(x){
return 0.0007*Math.pow(x,3)-
0.031*Math.pow(x,2)+0.64*x+1.28;
}

function b3Friction2(x){
return 0.000044*Math.pow(x,3)-
0.006*Math.pow(x,2)+0.36*x+2;
}

function b3Friction3(x){
return 0.00000045*Math.pow(x,3)-
0.000332*Math.pow(x,2)+0.1078*x+5.84;
}

function b3Nobounce(tension){
if(tension<=18){
return b3Friction1(tension);
}else if(tension>18&&tension<=44){
return b3Friction2(tension);
}else{
return b3Friction3(tension);
}
}

var b=normalize(bounciness/1.7,0,20);
b=projectNormal(b,0,0.8);
var s=normalize(speed/1.7,0,20);
var bouncyTension=projectNormal(s,0.5,200);
var bouncyFriction=quadraticOutInterpolation(
b,
b3Nobounce(bouncyTension),
0.01);


return{
stiffness:stiffnessFromOrigamiValue(bouncyTension),
damping:dampingFromOrigamiValue(bouncyFriction)};

}

module.exports={
fromOrigamiTensionAndFriction:fromOrigamiTensionAndFriction,
fromBouncinessAndSpeed:fromBouncinessAndSpeed};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNwcmluZ0NvbmZpZy5qcyJdLCJuYW1lcyI6WyJzdGlmZm5lc3NGcm9tT3JpZ2FtaVZhbHVlIiwib1ZhbHVlIiwiZGFtcGluZ0Zyb21PcmlnYW1pVmFsdWUiLCJmcm9tT3JpZ2FtaVRlbnNpb25BbmRGcmljdGlvbiIsInRlbnNpb24iLCJmcmljdGlvbiIsInN0aWZmbmVzcyIsImRhbXBpbmciLCJmcm9tQm91bmNpbmVzc0FuZFNwZWVkIiwiYm91bmNpbmVzcyIsInNwZWVkIiwibm9ybWFsaXplIiwidmFsdWUiLCJzdGFydFZhbHVlIiwiZW5kVmFsdWUiLCJwcm9qZWN0Tm9ybWFsIiwibiIsInN0YXJ0IiwiZW5kIiwibGluZWFySW50ZXJwb2xhdGlvbiIsInQiLCJxdWFkcmF0aWNPdXRJbnRlcnBvbGF0aW9uIiwiYjNGcmljdGlvbjEiLCJ4IiwiTWF0aCIsInBvdyIsImIzRnJpY3Rpb24yIiwiYjNGcmljdGlvbjMiLCJiM05vYm91bmNlIiwiYiIsInMiLCJib3VuY3lUZW5zaW9uIiwiYm91bmN5RnJpY3Rpb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFZQTs7Ozs7OztBQU9BLFFBQVNBLDBCQUFULENBQW1DQyxNQUFuQyxDQUEyQztBQUN6QyxNQUFPLENBQUNBLE9BQVMsRUFBVixFQUFnQixJQUFoQixDQUF1QixHQUE5QjtBQUNEOztBQUVELFFBQVNDLHdCQUFULENBQWlDRCxNQUFqQyxDQUF5QztBQUN2QyxNQUFPLENBQUNBLE9BQVMsQ0FBVixFQUFlLENBQWYsQ0FBbUIsRUFBMUI7QUFDRDs7QUFFRCxRQUFTRSw4QkFBVDtBQUNFQyxPQURGO0FBRUVDLFFBRkY7QUFHb0I7QUFDbEIsTUFBTztBQUNMQyxVQUFXTiwwQkFBMEJJLE9BQTFCLENBRE47QUFFTEcsUUFBU0wsd0JBQXdCRyxRQUF4QixDQUZKLENBQVA7O0FBSUQ7O0FBRUQsUUFBU0csdUJBQVQ7QUFDRUMsVUFERjtBQUVFQyxLQUZGO0FBR29CO0FBQ2xCLFFBQVNDLFVBQVQsQ0FBbUJDLEtBQW5CLENBQTBCQyxVQUExQixDQUFzQ0MsUUFBdEMsQ0FBZ0Q7QUFDOUMsTUFBTyxDQUFDRixNQUFRQyxVQUFULEdBQXdCQyxTQUFXRCxVQUFuQyxDQUFQO0FBQ0Q7O0FBRUQsUUFBU0UsY0FBVCxDQUF1QkMsQ0FBdkIsQ0FBMEJDLEtBQTFCLENBQWlDQyxHQUFqQyxDQUFzQztBQUNwQyxNQUFPRCxPQUFTRCxHQUFLRSxJQUFNRCxLQUFYLENBQWhCO0FBQ0Q7O0FBRUQsUUFBU0Usb0JBQVQsQ0FBNkJDLENBQTdCLENBQWdDSCxLQUFoQyxDQUF1Q0MsR0FBdkMsQ0FBNEM7QUFDMUMsTUFBT0UsR0FBSUYsR0FBSixDQUFVLENBQUMsRUFBSUUsQ0FBTCxFQUFVSCxLQUEzQjtBQUNEOztBQUVELFFBQVNJLDBCQUFULENBQW1DRCxDQUFuQyxDQUFzQ0gsS0FBdEMsQ0FBNkNDLEdBQTdDLENBQWtEO0FBQ2hELE1BQU9DLHFCQUFvQixFQUFJQyxDQUFKLENBQVFBLEVBQUlBLENBQWhDLENBQW1DSCxLQUFuQyxDQUEwQ0MsR0FBMUMsQ0FBUDtBQUNEOztBQUVELFFBQVNJLFlBQVQsQ0FBcUJDLENBQXJCLENBQXdCO0FBQ3RCLE1BQVEsUUFBU0MsS0FBS0MsR0FBTCxDQUFTRixDQUFULENBQVksQ0FBWixDQUFWO0FBQ0osTUFBUUMsS0FBS0MsR0FBTCxDQUFTRixDQUFULENBQVksQ0FBWixDQURKLENBQ3NCLEtBQU9BLENBRDdCLENBQ2lDLElBRHhDO0FBRUQ7O0FBRUQsUUFBU0csWUFBVCxDQUFxQkgsQ0FBckIsQ0FBd0I7QUFDdEIsTUFBUSxVQUFXQyxLQUFLQyxHQUFMLENBQVNGLENBQVQsQ0FBWSxDQUFaLENBQVo7QUFDSixNQUFRQyxLQUFLQyxHQUFMLENBQVNGLENBQVQsQ0FBWSxDQUFaLENBREosQ0FDc0IsS0FBT0EsQ0FEN0IsQ0FDaUMsQ0FEeEM7QUFFRDs7QUFFRCxRQUFTSSxZQUFULENBQXFCSixDQUFyQixDQUF3QjtBQUN0QixNQUFRLFlBQWFDLEtBQUtDLEdBQUwsQ0FBU0YsQ0FBVCxDQUFZLENBQVosQ0FBZDtBQUNKLFNBQVdDLEtBQUtDLEdBQUwsQ0FBU0YsQ0FBVCxDQUFZLENBQVosQ0FEUCxDQUN5QixPQUFTQSxDQURsQyxDQUNzQyxJQUQ3QztBQUVEOztBQUVELFFBQVNLLFdBQVQsQ0FBb0J4QixPQUFwQixDQUE2QjtBQUMzQixHQUFJQSxTQUFXLEVBQWYsQ0FBbUI7QUFDakIsTUFBT2tCLGFBQVlsQixPQUFaLENBQVA7QUFDRCxDQUZELElBRU8sSUFBSUEsUUFBVSxFQUFWLEVBQWdCQSxTQUFXLEVBQS9CLENBQW1DO0FBQ3hDLE1BQU9zQixhQUFZdEIsT0FBWixDQUFQO0FBQ0QsQ0FGTSxJQUVBO0FBQ0wsTUFBT3VCLGFBQVl2QixPQUFaLENBQVA7QUFDRDtBQUNGOztBQUVELEdBQUl5QixHQUFJbEIsVUFBVUYsV0FBYSxHQUF2QixDQUE0QixDQUE1QixDQUErQixFQUEvQixDQUFSO0FBQ0FvQixFQUFJZCxjQUFjYyxDQUFkLENBQWlCLENBQWpCLENBQW9CLEdBQXBCLENBQUo7QUFDQSxHQUFJQyxHQUFJbkIsVUFBVUQsTUFBUSxHQUFsQixDQUF1QixDQUF2QixDQUEwQixFQUExQixDQUFSO0FBQ0EsR0FBSXFCLGVBQWdCaEIsY0FBY2UsQ0FBZCxDQUFpQixHQUFqQixDQUFzQixHQUF0QixDQUFwQjtBQUNBLEdBQUlFLGdCQUFpQlg7QUFDbkJRLENBRG1CO0FBRW5CRCxXQUFXRyxhQUFYLENBRm1CO0FBR25CLElBSG1CLENBQXJCOzs7QUFNQSxNQUFPO0FBQ0x6QixVQUFXTiwwQkFBMEIrQixhQUExQixDQUROO0FBRUx4QixRQUFTTCx3QkFBd0I4QixjQUF4QixDQUZKLENBQVA7O0FBSUQ7O0FBRURDLE9BQU9DLE9BQVAsQ0FBaUI7QUFDZi9CLDJEQURlO0FBRWZLLDZDQUZlLENBQWpCIiwiZmlsZSI6IlNwcmluZ0NvbmZpZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgU3ByaW5nQ29uZmlnXG4gKiBAZmxvd1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxudHlwZSBTcHJpbmdDb25maWdUeXBlID0ge1xuICBzdGlmZm5lc3M6IG51bWJlcixcbiAgZGFtcGluZzogbnVtYmVyLFxufTtcblxuZnVuY3Rpb24gc3RpZmZuZXNzRnJvbU9yaWdhbWlWYWx1ZShvVmFsdWUpIHtcbiAgcmV0dXJuIChvVmFsdWUgLSAzMCkgKiAzLjYyICsgMTk0O1xufVxuXG5mdW5jdGlvbiBkYW1waW5nRnJvbU9yaWdhbWlWYWx1ZShvVmFsdWUpIHtcbiAgcmV0dXJuIChvVmFsdWUgLSA4KSAqIDMgKyAyNTtcbn1cblxuZnVuY3Rpb24gZnJvbU9yaWdhbWlUZW5zaW9uQW5kRnJpY3Rpb24oXG4gIHRlbnNpb246IG51bWJlcixcbiAgZnJpY3Rpb246IG51bWJlcixcbik6IFNwcmluZ0NvbmZpZ1R5cGUge1xuICByZXR1cm4ge1xuICAgIHN0aWZmbmVzczogc3RpZmZuZXNzRnJvbU9yaWdhbWlWYWx1ZSh0ZW5zaW9uKSxcbiAgICBkYW1waW5nOiBkYW1waW5nRnJvbU9yaWdhbWlWYWx1ZShmcmljdGlvbiksXG4gIH07XG59XG5cbmZ1bmN0aW9uIGZyb21Cb3VuY2luZXNzQW5kU3BlZWQoXG4gIGJvdW5jaW5lc3M6IG51bWJlcixcbiAgc3BlZWQ6IG51bWJlcixcbik6IFNwcmluZ0NvbmZpZ1R5cGUge1xuICBmdW5jdGlvbiBub3JtYWxpemUodmFsdWUsIHN0YXJ0VmFsdWUsIGVuZFZhbHVlKSB7XG4gICAgcmV0dXJuICh2YWx1ZSAtIHN0YXJ0VmFsdWUpIC8gKGVuZFZhbHVlIC0gc3RhcnRWYWx1ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBwcm9qZWN0Tm9ybWFsKG4sIHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gc3RhcnQgKyAobiAqIChlbmQgLSBzdGFydCkpO1xuICB9XG5cbiAgZnVuY3Rpb24gbGluZWFySW50ZXJwb2xhdGlvbih0LCBzdGFydCwgZW5kKSB7XG4gICAgcmV0dXJuIHQgKiBlbmQgKyAoMSAtIHQpICogc3RhcnQ7XG4gIH1cblxuICBmdW5jdGlvbiBxdWFkcmF0aWNPdXRJbnRlcnBvbGF0aW9uKHQsIHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gbGluZWFySW50ZXJwb2xhdGlvbigyICogdCAtIHQgKiB0LCBzdGFydCwgZW5kKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGIzRnJpY3Rpb24xKHgpIHtcbiAgICByZXR1cm4gKDAuMDAwNyAqIE1hdGgucG93KHgsIDMpKSAtXG4gICAgICAoMC4wMzEgKiBNYXRoLnBvdyh4LCAyKSkgKyAwLjY0ICogeCArIDEuMjg7XG4gIH1cblxuICBmdW5jdGlvbiBiM0ZyaWN0aW9uMih4KSB7XG4gICAgcmV0dXJuICgwLjAwMDA0NCAqIE1hdGgucG93KHgsIDMpKSAtXG4gICAgICAoMC4wMDYgKiBNYXRoLnBvdyh4LCAyKSkgKyAwLjM2ICogeCArIDI7XG4gIH1cblxuICBmdW5jdGlvbiBiM0ZyaWN0aW9uMyh4KSB7XG4gICAgcmV0dXJuICgwLjAwMDAwMDQ1ICogTWF0aC5wb3coeCwgMykpIC1cbiAgICAgICgwLjAwMDMzMiAqIE1hdGgucG93KHgsIDIpKSArIDAuMTA3OCAqIHggKyA1Ljg0O1xuICB9XG5cbiAgZnVuY3Rpb24gYjNOb2JvdW5jZSh0ZW5zaW9uKSB7XG4gICAgaWYgKHRlbnNpb24gPD0gMTgpIHtcbiAgICAgIHJldHVybiBiM0ZyaWN0aW9uMSh0ZW5zaW9uKTtcbiAgICB9IGVsc2UgaWYgKHRlbnNpb24gPiAxOCAmJiB0ZW5zaW9uIDw9IDQ0KSB7XG4gICAgICByZXR1cm4gYjNGcmljdGlvbjIodGVuc2lvbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBiM0ZyaWN0aW9uMyh0ZW5zaW9uKTtcbiAgICB9XG4gIH1cblxuICB2YXIgYiA9IG5vcm1hbGl6ZShib3VuY2luZXNzIC8gMS43LCAwLCAyMCk7XG4gIGIgPSBwcm9qZWN0Tm9ybWFsKGIsIDAsIDAuOCk7XG4gIHZhciBzID0gbm9ybWFsaXplKHNwZWVkIC8gMS43LCAwLCAyMCk7XG4gIHZhciBib3VuY3lUZW5zaW9uID0gcHJvamVjdE5vcm1hbChzLCAwLjUsIDIwMCk7XG4gIHZhciBib3VuY3lGcmljdGlvbiA9IHF1YWRyYXRpY091dEludGVycG9sYXRpb24oXG4gICAgYixcbiAgICBiM05vYm91bmNlKGJvdW5jeVRlbnNpb24pLFxuICAgIDAuMDFcbiAgKTtcblxuICByZXR1cm4ge1xuICAgIHN0aWZmbmVzczogc3RpZmZuZXNzRnJvbU9yaWdhbWlWYWx1ZShib3VuY3lUZW5zaW9uKSxcbiAgICBkYW1waW5nOiBkYW1waW5nRnJvbU9yaWdhbWlWYWx1ZShib3VuY3lGcmljdGlvbiksXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBmcm9tT3JpZ2FtaVRlbnNpb25BbmRGcmljdGlvbixcbiAgZnJvbUJvdW5jaW5lc3NBbmRTcGVlZCxcbn07XG4iXX0=