dc607d41376c52155d12b5420a73fc6a











'use strict';

var invariant=require('fbjs/lib/invariant');


var ReactNative={

get AccessibilityInfo(){return require('AccessibilityInfo');},
get ActivityIndicator(){return require('ActivityIndicator');},
get ART(){return require('ReactNativeART');},
get Button(){return require('Button');},
get CheckBox(){return require('CheckBox');},
get DatePickerIOS(){return require('DatePickerIOS');},
get DrawerLayoutAndroid(){return require('DrawerLayoutAndroid');},
get FlatList(){return require('FlatList');},
get Image(){return require('Image');},
get ImageBackground(){return require('ImageBackground');},
get ImageEditor(){return require('ImageEditor');},
get ImageStore(){return require('ImageStore');},
get KeyboardAvoidingView(){return require('KeyboardAvoidingView');},
get ListView(){return require('ListView');},
get MaskedViewIOS(){return require('MaskedViewIOS');},
get Modal(){return require('Modal');},
get NavigatorIOS(){return require('NavigatorIOS');},
get Picker(){return require('Picker');},
get PickerIOS(){return require('PickerIOS');},
get ProgressBarAndroid(){return require('ProgressBarAndroid');},
get ProgressViewIOS(){return require('ProgressViewIOS');},
get SafeAreaView(){return require('SafeAreaView');},
get ScrollView(){return require('ScrollView');},
get SectionList(){return require('SectionList');},
get SegmentedControlIOS(){return require('SegmentedControlIOS');},
get Slider(){return require('Slider');},
get SnapshotViewIOS(){return require('SnapshotViewIOS');},
get Switch(){return require('Switch');},
get RefreshControl(){return require('RefreshControl');},
get StatusBar(){return require('StatusBar');},
get SwipeableFlatList(){return require('SwipeableFlatList');},
get SwipeableListView(){return require('SwipeableListView');},
get TabBarIOS(){return require('TabBarIOS');},
get Text(){return require('Text');},
get TextInput(){return require('TextInput');},
get ToastAndroid(){return require('ToastAndroid');},
get ToolbarAndroid(){return require('ToolbarAndroid');},
get Touchable(){return require('Touchable');},
get TouchableHighlight(){return require('TouchableHighlight');},
get TouchableNativeFeedback(){return require('TouchableNativeFeedback');},
get TouchableOpacity(){return require('TouchableOpacity');},
get TouchableWithoutFeedback(){return require('TouchableWithoutFeedback');},
get View(){return require('View');},
get ViewPagerAndroid(){return require('ViewPagerAndroid');},
get VirtualizedList(){return require('VirtualizedList');},
get WebView(){return require('WebView');},


get ActionSheetIOS(){return require('ActionSheetIOS');},
get Alert(){return require('Alert');},
get AlertIOS(){return require('AlertIOS');},
get Animated(){return require('Animated');},
get AppRegistry(){return require('AppRegistry');},
get AppState(){return require('AppState');},
get AsyncStorage(){return require('AsyncStorage');},
get BackAndroid(){return require('BackAndroid');},
get BackHandler(){return require('BackHandler');},
get CameraRoll(){return require('CameraRoll');},
get Clipboard(){return require('Clipboard');},
get DatePickerAndroid(){return require('DatePickerAndroid');},
get DeviceInfo(){return require('DeviceInfo');},
get Dimensions(){return require('Dimensions');},
get Easing(){return require('Easing');},
get findNodeHandle(){return require('ReactNative').findNodeHandle;},
get I18nManager(){return require('I18nManager');},
get ImagePickerIOS(){return require('ImagePickerIOS');},
get InteractionManager(){return require('InteractionManager');},
get Keyboard(){return require('Keyboard');},
get LayoutAnimation(){return require('LayoutAnimation');},
get Linking(){return require('Linking');},
get NativeEventEmitter(){return require('NativeEventEmitter');},
get NetInfo(){return require('NetInfo');},
get PanResponder(){return require('PanResponder');},
get PermissionsAndroid(){return require('PermissionsAndroid');},
get PixelRatio(){return require('PixelRatio');},
get PushNotificationIOS(){return require('PushNotificationIOS');},
get Settings(){return require('Settings');},
get Share(){return require('Share');},
get StatusBarIOS(){return require('StatusBarIOS');},
get StyleSheet(){return require('StyleSheet');},
get Systrace(){return require('Systrace');},
get TimePickerAndroid(){return require('TimePickerAndroid');},
get TVEventHandler(){return require('TVEventHandler');},
get UIManager(){return require('UIManager');},
get unstable_batchedUpdates(){return require('ReactNative').unstable_batchedUpdates;},
get Vibration(){return require('Vibration');},
get VibrationIOS(){return require('VibrationIOS');},


get DeviceEventEmitter(){return require('RCTDeviceEventEmitter');},
get NativeAppEventEmitter(){return require('RCTNativeAppEventEmitter');},
get NativeModules(){return require('NativeModules');},
get Platform(){return require('Platform');},
get processColor(){return require('processColor');},
get requireNativeComponent(){return require('requireNativeComponent');},
get takeSnapshot(){return require('takeSnapshot');},


get ColorPropType(){return require('ColorPropType');},
get EdgeInsetsPropType(){return require('EdgeInsetsPropType');},
get PointPropType(){return require('PointPropType');},
get ViewPropTypes(){return require('ViewPropTypes');},


get Navigator(){
invariant(
false,
'Navigator is deprecated and has been removed from this package. It can now be installed '+
'and imported from `react-native-deprecated-custom-components` instead of `react-native`. '+
'Learn about alternative navigation solutions at http://facebook.github.io/react-native/docs/navigation.html');

}};


module.exports=ReactNative;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LW5hdGl2ZS1pbXBsZW1lbnRhdGlvbi5qcyJdLCJuYW1lcyI6WyJpbnZhcmlhbnQiLCJyZXF1aXJlIiwiUmVhY3ROYXRpdmUiLCJBY2Nlc3NpYmlsaXR5SW5mbyIsIkFjdGl2aXR5SW5kaWNhdG9yIiwiQVJUIiwiQnV0dG9uIiwiQ2hlY2tCb3giLCJEYXRlUGlja2VySU9TIiwiRHJhd2VyTGF5b3V0QW5kcm9pZCIsIkZsYXRMaXN0IiwiSW1hZ2UiLCJJbWFnZUJhY2tncm91bmQiLCJJbWFnZUVkaXRvciIsIkltYWdlU3RvcmUiLCJLZXlib2FyZEF2b2lkaW5nVmlldyIsIkxpc3RWaWV3IiwiTWFza2VkVmlld0lPUyIsIk1vZGFsIiwiTmF2aWdhdG9ySU9TIiwiUGlja2VyIiwiUGlja2VySU9TIiwiUHJvZ3Jlc3NCYXJBbmRyb2lkIiwiUHJvZ3Jlc3NWaWV3SU9TIiwiU2FmZUFyZWFWaWV3IiwiU2Nyb2xsVmlldyIsIlNlY3Rpb25MaXN0IiwiU2VnbWVudGVkQ29udHJvbElPUyIsIlNsaWRlciIsIlNuYXBzaG90Vmlld0lPUyIsIlN3aXRjaCIsIlJlZnJlc2hDb250cm9sIiwiU3RhdHVzQmFyIiwiU3dpcGVhYmxlRmxhdExpc3QiLCJTd2lwZWFibGVMaXN0VmlldyIsIlRhYkJhcklPUyIsIlRleHQiLCJUZXh0SW5wdXQiLCJUb2FzdEFuZHJvaWQiLCJUb29sYmFyQW5kcm9pZCIsIlRvdWNoYWJsZSIsIlRvdWNoYWJsZUhpZ2hsaWdodCIsIlRvdWNoYWJsZU5hdGl2ZUZlZWRiYWNrIiwiVG91Y2hhYmxlT3BhY2l0eSIsIlRvdWNoYWJsZVdpdGhvdXRGZWVkYmFjayIsIlZpZXciLCJWaWV3UGFnZXJBbmRyb2lkIiwiVmlydHVhbGl6ZWRMaXN0IiwiV2ViVmlldyIsIkFjdGlvblNoZWV0SU9TIiwiQWxlcnQiLCJBbGVydElPUyIsIkFuaW1hdGVkIiwiQXBwUmVnaXN0cnkiLCJBcHBTdGF0ZSIsIkFzeW5jU3RvcmFnZSIsIkJhY2tBbmRyb2lkIiwiQmFja0hhbmRsZXIiLCJDYW1lcmFSb2xsIiwiQ2xpcGJvYXJkIiwiRGF0ZVBpY2tlckFuZHJvaWQiLCJEZXZpY2VJbmZvIiwiRGltZW5zaW9ucyIsIkVhc2luZyIsImZpbmROb2RlSGFuZGxlIiwiSTE4bk1hbmFnZXIiLCJJbWFnZVBpY2tlcklPUyIsIkludGVyYWN0aW9uTWFuYWdlciIsIktleWJvYXJkIiwiTGF5b3V0QW5pbWF0aW9uIiwiTGlua2luZyIsIk5hdGl2ZUV2ZW50RW1pdHRlciIsIk5ldEluZm8iLCJQYW5SZXNwb25kZXIiLCJQZXJtaXNzaW9uc0FuZHJvaWQiLCJQaXhlbFJhdGlvIiwiUHVzaE5vdGlmaWNhdGlvbklPUyIsIlNldHRpbmdzIiwiU2hhcmUiLCJTdGF0dXNCYXJJT1MiLCJTdHlsZVNoZWV0IiwiU3lzdHJhY2UiLCJUaW1lUGlja2VyQW5kcm9pZCIsIlRWRXZlbnRIYW5kbGVyIiwiVUlNYW5hZ2VyIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJWaWJyYXRpb24iLCJWaWJyYXRpb25JT1MiLCJEZXZpY2VFdmVudEVtaXR0ZXIiLCJOYXRpdmVBcHBFdmVudEVtaXR0ZXIiLCJOYXRpdmVNb2R1bGVzIiwiUGxhdGZvcm0iLCJwcm9jZXNzQ29sb3IiLCJyZXF1aXJlTmF0aXZlQ29tcG9uZW50IiwidGFrZVNuYXBzaG90IiwiQ29sb3JQcm9wVHlwZSIsIkVkZ2VJbnNldHNQcm9wVHlwZSIsIlBvaW50UHJvcFR5cGUiLCJWaWV3UHJvcFR5cGVzIiwiTmF2aWdhdG9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFXQTs7QUFFQSxHQUFNQSxXQUFZQyxRQUFRLG9CQUFSLENBQWxCOzs7QUFHQSxHQUFNQyxhQUFjOztBQUVsQixHQUFJQyxrQkFBSixFQUF3QixDQUFFLE1BQU9GLFNBQVEsbUJBQVIsQ0FBUCxDQUFzQyxDQUY5QztBQUdsQixHQUFJRyxrQkFBSixFQUF3QixDQUFFLE1BQU9ILFNBQVEsbUJBQVIsQ0FBUCxDQUFzQyxDQUg5QztBQUls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LyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSByZWFjdC1uYXRpdmUtaW1wbGVtZW50YXRpb25cbiAqIEBmbG93XG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgaW52YXJpYW50ID0gcmVxdWlyZSgnZmJqcy9saWIvaW52YXJpYW50Jyk7XG5cbi8vIEV4cG9ydCBSZWFjdCwgcGx1cyBzb21lIG5hdGl2ZSBhZGRpdGlvbnMuXG5jb25zdCBSZWFjdE5hdGl2ZSA9IHtcbiAgLy8gQ29tcG9uZW50c1xuICBnZXQgQWNjZXNzaWJpbGl0eUluZm8oKSB7IHJldHVybiByZXF1aXJlKCdBY2Nlc3NpYmlsaXR5SW5mbycpOyB9LFxuICBnZXQgQWN0aXZpdHlJbmRpY2F0b3IoKSB7IHJldHVybiByZXF1aXJlKCdBY3Rpdml0eUluZGljYXRvcicpOyB9LFxuICBnZXQgQVJUKCkgeyByZXR1cm4gcmVxdWlyZSgnUmVhY3ROYXRpdmVBUlQnKTsgfSxcbiAgZ2V0IEJ1dHRvbigpIHsgcmV0dXJuIHJlcXVpcmUoJ0J1dHRvbicpOyB9LFxuICBnZXQgQ2hlY2tCb3goKSB7IHJldHVybiByZXF1aXJlKCdDaGVja0JveCcpOyB9LFxuICBnZXQgRGF0ZVBpY2tlcklPUygpIHsgcmV0dXJuIHJlcXVpcmUoJ0RhdGVQaWNrZXJJT1MnKTsgfSxcbiAgZ2V0IERyYXdlckxheW91dEFuZHJvaWQoKSB7IHJldHVybiByZXF1aXJlKCdEcmF3ZXJMYXlvdXRBbmRyb2lkJyk7IH0sXG4gIGdldCBGbGF0TGlzdCgpIHsgcmV0dXJuIHJlcXVpcmUoJ0ZsYXRMaXN0Jyk7IH0sXG4gIGdldCBJbWFnZSgpIHsgcmV0dXJuIHJlcXVpcmUoJ0ltYWdlJyk7IH0sXG4gIGdldCBJbWFnZUJhY2tncm91bmQoKSB7IHJldHVybiByZXF1aXJlKCdJbWFnZUJhY2tncm91bmQnKTsgfSxcbiAgZ2V0IEltYWdlRWRpdG9yKCkgeyByZXR1cm4gcmVxdWlyZSgnSW1hZ2VFZGl0b3InKTsgfSxcbiAgZ2V0IEltYWdlU3RvcmUoKSB7IHJldHVybiByZXF1aXJlKCdJbWFnZVN0b3JlJyk7IH0sXG4gIGdldCBLZXlib2FyZEF2b2lkaW5nVmlldygpIHsgcmV0dXJuIHJlcXVpcmUoJ0tleWJvYXJkQXZvaWRpbmdWaWV3Jyk7IH0sXG4gIGdldCBMaXN0VmlldygpIHsgcmV0dXJuIHJlcXVpcmUoJ0xpc3RWaWV3Jyk7IH0sXG4gIGdldCBNYXNrZWRWaWV3SU9TKCkgeyByZXR1cm4gcmVxdWlyZSgnTWFza2VkVmlld0lPUycpOyB9LFxuICBnZXQgTW9kYWwoKSB7IHJldHVybiByZXF1aXJlKCdNb2RhbCcpOyB9LFxuICBnZXQgTmF2aWdhdG9ySU9TKCkgeyByZXR1cm4gcmVxdWlyZSgnTmF2aWdhdG9ySU9TJyk7IH0sXG4gIGdldCBQaWNrZXIoKSB7IHJldHVybiByZXF1aXJlKCdQaWNrZXInKTsgfSxcbiAgZ2V0IFBpY2tlcklPUygpIHsgcmV0dXJuIHJlcXVpcmUoJ1BpY2tlcklPUycpOyB9LFxuICBnZXQgUHJvZ3Jlc3NCYXJBbmRyb2lkKCkgeyByZXR1cm4gcmVxdWlyZSgnUHJvZ3Jlc3NCYXJBbmRyb2lkJyk7IH0sXG4gIGdldCBQcm9ncmVzc1ZpZXdJT1MoKSB7IHJldHVybiByZXF1aXJlKCdQcm9ncmVzc1ZpZXdJT1MnKTsgfSxcbiAgZ2V0IFNhZmVBcmVhVmlldygpIHsgcmV0dXJuIHJlcXVpcmUoJ1NhZmVBcmVhVmlldycpOyB9LFxuICBnZXQgU2Nyb2xsVmlldygpIHsgcmV0dXJuIHJlcXVpcmUoJ1Njcm9sbFZpZXcnKTsgfSxcbiAgZ2V0IFNlY3Rpb25MaXN0KCkgeyByZXR1cm4gcmVxdWlyZSgnU2VjdGlvbkxpc3QnKTsgfSxcbiAgZ2V0IFNlZ21lbnRlZENvbnRyb2xJT1MoKSB7IHJldHVybiByZXF1aXJlKCdTZWdtZW50ZWRDb250cm9sSU9TJyk7IH0sXG4gIGdldCBTbGlkZXIoKSB7IHJldHVybiByZXF1aXJlKCdTbGlkZXInKTsgfSxcbiAgZ2V0IFNuYXBzaG90Vmlld0lPUygpIHsgcmV0dXJuIHJlcXVpcmUoJ1NuYXBzaG90Vmlld0lPUycpOyB9LFxuICBnZXQgU3dpdGNoKCkgeyByZXR1cm4gcmVxdWlyZSgnU3dpdGNoJyk7IH0sXG4gIGdldCBSZWZyZXNoQ29udHJvbCgpIHsgcmV0dXJuIHJlcXVpcmUoJ1JlZnJlc2hDb250cm9sJyk7IH0sXG4gIGdldCBTdGF0dXNCYXIoKSB7IHJldHVybiByZXF1aXJlKCdTdGF0dXNCYXInKTsgfSxcbiAgZ2V0IFN3aXBlYWJsZUZsYXRMaXN0KCkgeyByZXR1cm4gcmVxdWlyZSgnU3dpcGVhYmxlRmxhdExpc3QnKTsgfSxcbiAgZ2V0IFN3aXBlYWJsZUxpc3RWaWV3KCkgeyByZXR1cm4gcmVxdWlyZSgnU3dpcGVhYmxlTGlzdFZpZXcnKTsgfSxcbiAgZ2V0IFRhYkJhcklPUygpIHsgcmV0dXJuIHJlcXVpcmUoJ1RhYkJhcklPUycpOyB9LFxuICBnZXQgVGV4dCgpIHsgcmV0dXJuIHJlcXVpcmUoJ1RleHQnKTsgfSxcbiAgZ2V0IFRleHRJbnB1dCgpIHsgcmV0dXJuIHJlcXVpcmUoJ1RleHRJbnB1dCcpOyB9LFxuICBnZXQgVG9hc3RBbmRyb2lkKCkgeyByZXR1cm4gcmVxdWlyZSgnVG9hc3RBbmRyb2lkJyk7IH0sXG4gIGdldCBUb29sYmFyQW5kcm9pZCgpIHsgcmV0dXJuIHJlcXVpcmUoJ1Rvb2xiYXJBbmRyb2lkJyk7IH0sXG4gIGdldCBUb3VjaGFibGUoKSB7IHJldHVybiByZXF1aXJlKCdUb3VjaGFibGUnKTsgfSxcbiAgZ2V0IFRvdWNoYWJsZUhpZ2hsaWdodCgpIHsgcmV0dXJuIHJlcXVpcmUoJ1RvdWNoYWJsZUhpZ2hsaWdodCcpOyB9LFxuICBnZXQgVG91Y2hhYmxlTmF0aXZlRmVlZGJhY2soKSB7IHJldHVybiByZXF1aXJlKCdUb3VjaGFibGVOYXRpdmVGZWVkYmFjaycpOyB9LFxuICBnZXQgVG91Y2hhYmxlT3BhY2l0eSgpIHsgcmV0dXJuIHJlcXVpcmUoJ1RvdWNoYWJsZU9wYWNpdHknKTsgfSxcbiAgZ2V0IFRvdWNoYWJsZVdpdGhvdXRGZWVkYmFjaygpIHsgcmV0dXJuIHJlcXVpcmUoJ1RvdWNoYWJsZVdpdGhvdXRGZWVkYmFjaycpOyB9LFxuICBnZXQgVmlldygpIHsgcmV0dXJuIHJlcXVpcmUoJ1ZpZXcnKTsgfSxcbiAgZ2V0IFZpZXdQYWdlckFuZHJvaWQoKSB7IHJldHVybiByZXF1aXJlKCdWaWV3UGFnZXJBbmRyb2lkJyk7IH0sXG4gIGdldCBWaXJ0dWFsaXplZExpc3QoKSB7IHJldHVybiByZXF1aXJlKCdWaXJ0dWFsaXplZExpc3QnKTsgfSxcbiAgZ2V0IFdlYlZpZXcoKSB7IHJldHVybiByZXF1aXJlKCdXZWJWaWV3Jyk7IH0sXG5cbiAgLy8gQVBJc1xuICBnZXQgQWN0aW9uU2hlZXRJT1MoKSB7IHJldHVybiByZXF1aXJlKCdBY3Rpb25TaGVldElPUycpOyB9LFxuICBnZXQgQWxlcnQoKSB7IHJldHVybiByZXF1aXJlKCdBbGVydCcpOyB9LFxuICBnZXQgQWxlcnRJT1MoKSB7IHJldHVybiByZXF1aXJlKCdBbGVydElPUycpOyB9LFxuICBnZXQgQW5pbWF0ZWQoKSB7IHJldHVybiByZXF1aXJlKCdBbmltYXRlZCcpOyB9LFxuICBnZXQgQXBwUmVnaXN0cnkoKSB7IHJldHVybiByZXF1aXJlKCdBcHBSZWdpc3RyeScpOyB9LFxuICBnZXQgQXBwU3RhdGUoKSB7IHJldHVybiByZXF1aXJlKCdBcHBTdGF0ZScpOyB9LFxuICBnZXQgQXN5bmNTdG9yYWdlKCkgeyByZXR1cm4gcmVxdWlyZSgnQXN5bmNTdG9yYWdlJyk7IH0sXG4gIGdldCBCYWNrQW5kcm9pZCgpIHsgcmV0dXJuIHJlcXVpcmUoJ0JhY2tBbmRyb2lkJyk7IH0sIC8vIGRlcHJlY2F0ZWQ6IHVzZSBCYWNrSGFuZGxlciBpbnN0ZWFkXG4gIGdldCBCYWNrSGFuZGxlcigpIHsgcmV0dXJuIHJlcXVpcmUoJ0JhY2tIYW5kbGVyJyk7IH0sXG4gIGdldCBDYW1lcmFSb2xsKCkgeyByZXR1cm4gcmVxdWlyZSgnQ2FtZXJhUm9sbCcpOyB9LFxuICBnZXQgQ2xpcGJvYXJkKCkgeyByZXR1cm4gcmVxdWlyZSgnQ2xpcGJvYXJkJyk7IH0sXG4gIGdldCBEYXRlUGlja2VyQW5kcm9pZCgpIHsgcmV0dXJuIHJlcXVpcmUoJ0RhdGVQaWNrZXJBbmRyb2lkJyk7IH0sXG4gIGdldCBEZXZpY2VJbmZvKCkgeyByZXR1cm4gcmVxdWlyZSgnRGV2aWNlSW5mbycpOyB9LFxuICBnZXQgRGltZW5zaW9ucygpIHsgcmV0dXJuIHJlcXVpcmUoJ0RpbWVuc2lvbnMnKTsgfSxcbiAgZ2V0IEVhc2luZygpIHsgcmV0dXJuIHJlcXVpcmUoJ0Vhc2luZycpOyB9LFxuICBnZXQgZmluZE5vZGVIYW5kbGUoKSB7IHJldHVybiByZXF1aXJlKCdSZWFjdE5hdGl2ZScpLmZpbmROb2RlSGFuZGxlOyB9LFxuICBnZXQgSTE4bk1hbmFnZXIoKSB7IHJldHVybiByZXF1aXJlKCdJMThuTWFuYWdlcicpOyB9LFxuICBnZXQgSW1hZ2VQaWNrZXJJT1MoKSB7IHJldHVybiByZXF1aXJlKCdJbWFnZVBpY2tlcklPUycpOyB9LFxuICBnZXQgSW50ZXJhY3Rpb25NYW5hZ2VyKCkgeyByZXR1cm4gcmVxdWlyZSgnSW50ZXJhY3Rpb25NYW5hZ2VyJyk7IH0sXG4gIGdldCBLZXlib2FyZCgpIHsgcmV0dXJuIHJlcXVpcmUoJ0tleWJvYXJkJyk7IH0sXG4gIGdldCBMYXlvdXRBbmltYXRpb24oKSB7IHJldHVybiByZXF1aXJlKCdMYXlvdXRBbmltYXRpb24nKTsgfSxcbiAgZ2V0IExpbmtpbmcoKSB7IHJldHVybiByZXF1aXJlKCdMaW5raW5nJyk7IH0sXG4gIGdldCBOYXRpdmVFdmVudEVtaXR0ZXIoKSB7IHJldHVybiByZXF1aXJlKCdOYXRpdmVFdmVudEVtaXR0ZXInKTsgfSxcbiAgZ2V0IE5ldEluZm8oKSB7IHJldHVybiByZXF1aXJlKCdOZXRJbmZvJyk7IH0sXG4gIGdldCBQYW5SZXNwb25kZXIoKSB7IHJldHVybiByZXF1aXJlKCdQYW5SZXNwb25kZXInKTsgfSxcbiAgZ2V0IFBlcm1pc3Npb25zQW5kcm9pZCgpIHsgcmV0dXJuIHJlcXVpcmUoJ1Blcm1pc3Npb25zQW5kcm9pZCcpOyB9LFxuICBnZXQgUGl4ZWxSYXRpbygpIHsgcmV0dXJuIHJlcXVpcmUoJ1BpeGVsUmF0aW8nKTsgfSxcbiAgZ2V0IFB1c2hOb3RpZmljYXRpb25JT1MoKSB7IHJldHVybiByZXF1aXJlKCdQdXNoTm90aWZpY2F0aW9uSU9TJyk7IH0sXG4gIGdldCBTZXR0aW5ncygpIHsgcmV0dXJuIHJlcXVpcmUoJ1NldHRpbmdzJyk7IH0sXG4gIGdldCBTaGFyZSgpIHsgcmV0dXJuIHJlcXVpcmUoJ1NoYXJlJyk7IH0sXG4gIGdldCBTdGF0dXNCYXJJT1MoKSB7IHJldHVybiByZXF1aXJlKCdTdGF0dXNCYXJJT1MnKTsgfSxcbiAgZ2V0IFN0eWxlU2hlZXQoKSB7IHJldHVybiByZXF1aXJlKCdTdHlsZVNoZWV0Jyk7IH0sXG4gIGdldCBTeXN0cmFjZSgpIHsgcmV0dXJuIHJlcXVpcmUoJ1N5c3RyYWNlJyk7IH0sXG4gIGdldCBUaW1lUGlja2VyQW5kcm9pZCgpIHsgcmV0dXJuIHJlcXVpcmUoJ1RpbWVQaWNrZXJBbmRyb2lkJyk7IH0sXG4gIGdldCBUVkV2ZW50SGFuZGxlcigpIHsgcmV0dXJuIHJlcXVpcmUoJ1RWRXZlbnRIYW5kbGVyJyk7IH0sXG4gIGdldCBVSU1hbmFnZXIoKSB7IHJldHVybiByZXF1aXJlKCdVSU1hbmFnZXInKTsgfSxcbiAgZ2V0IHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzKCkgeyByZXR1cm4gcmVxdWlyZSgnUmVhY3ROYXRpdmUnKS51bnN0YWJsZV9iYXRjaGVkVXBkYXRlczsgfSxcbiAgZ2V0IFZpYnJhdGlvbigpIHsgcmV0dXJuIHJlcXVpcmUoJ1ZpYnJhdGlvbicpOyB9LFxuICBnZXQgVmlicmF0aW9uSU9TKCkgeyByZXR1cm4gcmVxdWlyZSgnVmlicmF0aW9uSU9TJyk7IH0sXG5cbiAgLy8gUGx1Z2luc1xuICBnZXQgRGV2aWNlRXZlbnRFbWl0dGVyKCkgeyByZXR1cm4gcmVxdWlyZSgnUkNURGV2aWNlRXZlbnRFbWl0dGVyJyk7IH0sXG4gIGdldCBOYXRpdmVBcHBFdmVudEVtaXR0ZXIoKSB7IHJldHVybiByZXF1aXJlKCdSQ1ROYXRpdmVBcHBFdmVudEVtaXR0ZXInKTsgfSxcbiAgZ2V0IE5hdGl2ZU1vZHVsZXMoKSB7IHJldHVybiByZXF1aXJlKCdOYXRpdmVNb2R1bGVzJyk7IH0sXG4gIGdldCBQbGF0Zm9ybSgpIHsgcmV0dXJuIHJlcXVpcmUoJ1BsYXRmb3JtJyk7IH0sXG4gIGdldCBwcm9jZXNzQ29sb3IoKSB7IHJldHVybiByZXF1aXJlKCdwcm9jZXNzQ29sb3InKTsgfSxcbiAgZ2V0IHJlcXVpcmVOYXRpdmVDb21wb25lbnQoKSB7IHJldHVybiByZXF1aXJlKCdyZXF1aXJlTmF0aXZlQ29tcG9uZW50Jyk7IH0sXG4gIGdldCB0YWtlU25hcHNob3QoKSB7IHJldHVybiByZXF1aXJlKCd0YWtlU25hcHNob3QnKTsgfSxcblxuICAvLyBQcm9wIFR5cGVzXG4gIGdldCBDb2xvclByb3BUeXBlKCkgeyByZXR1cm4gcmVxdWlyZSgnQ29sb3JQcm9wVHlwZScpOyB9LFxuICBnZXQgRWRnZUluc2V0c1Byb3BUeXBlKCkgeyByZXR1cm4gcmVxdWlyZSgnRWRnZUluc2V0c1Byb3BUeXBlJyk7IH0sXG4gIGdldCBQb2ludFByb3BUeXBlKCkgeyByZXR1cm4gcmVxdWlyZSgnUG9pbnRQcm9wVHlwZScpOyB9LFxuICBnZXQgVmlld1Byb3BUeXBlcygpIHsgcmV0dXJuIHJlcXVpcmUoJ1ZpZXdQcm9wVHlwZXMnKTsgfSxcblxuICAvLyBEZXByZWNhdGVkXG4gIGdldCBOYXZpZ2F0b3IoKSB7XG4gICAgaW52YXJpYW50KFxuICAgICAgZmFsc2UsXG4gICAgICAnTmF2aWdhdG9yIGlzIGRlcHJlY2F0ZWQgYW5kIGhhcyBiZWVuIHJlbW92ZWQgZnJvbSB0aGlzIHBhY2thZ2UuIEl0IGNhbiBub3cgYmUgaW5zdGFsbGVkICcgK1xuICAgICAgJ2FuZCBpbXBvcnRlZCBmcm9tIGByZWFjdC1uYXRpdmUtZGVwcmVjYXRlZC1jdXN0b20tY29tcG9uZW50c2AgaW5zdGVhZCBvZiBgcmVhY3QtbmF0aXZlYC4gJyArXG4gICAgICAnTGVhcm4gYWJvdXQgYWx0ZXJuYXRpdmUgbmF2aWdhdGlvbiBzb2x1dGlvbnMgYXQgaHR0cDovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy9uYXZpZ2F0aW9uLmh0bWwnXG4gICAgKTtcbiAgfSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3ROYXRpdmU7XG4iXX0=