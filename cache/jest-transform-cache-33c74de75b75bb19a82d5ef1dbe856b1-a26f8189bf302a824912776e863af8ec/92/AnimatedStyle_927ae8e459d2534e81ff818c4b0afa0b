0ea42b541b712ce5e4b09c13812eabf1












'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

var AnimatedNode=require('./AnimatedNode');
var AnimatedTransform=require('./AnimatedTransform');
var AnimatedWithChildren=require('./AnimatedWithChildren');
var NativeAnimatedHelper=require('../NativeAnimatedHelper');

var flattenStyle=require('flattenStyle');var

AnimatedStyle=function(_AnimatedWithChildren){_inherits(AnimatedStyle,_AnimatedWithChildren);


function AnimatedStyle(style){_classCallCheck(this,AnimatedStyle);var _this=_possibleConstructorReturn(this,(AnimatedStyle.__proto__||Object.getPrototypeOf(AnimatedStyle)).call(this));

style=flattenStyle(style)||{};
if(style.transform){
style=_extends({},
style,{
transform:new AnimatedTransform(style.transform)});

}
_this._style=style;return _this;
}_createClass(AnimatedStyle,[{key:'_walkStyleAndGetValues',value:function _walkStyleAndGetValues(


style){
var updatedStyle={};
for(var key in style){
var value=style[key];
if(value instanceof AnimatedNode){
if(!value.__isNative){


updatedStyle[key]=value.__getValue();
}
}else if(value&&!Array.isArray(value)&&typeof value==='object'){

updatedStyle[key]=this._walkStyleAndGetValues(value);
}else{
updatedStyle[key]=value;
}
}
return updatedStyle;
}},{key:'__getValue',value:function __getValue()

{
return this._walkStyleAndGetValues(this._style);
}},{key:'_walkStyleAndGetAnimatedValues',value:function _walkStyleAndGetAnimatedValues(


style){
var updatedStyle={};
for(var key in style){
var value=style[key];
if(value instanceof AnimatedNode){
updatedStyle[key]=value.__getAnimatedValue();
}else if(value&&!Array.isArray(value)&&typeof value==='object'){

updatedStyle[key]=this._walkStyleAndGetAnimatedValues(value);
}
}
return updatedStyle;
}},{key:'__getAnimatedValue',value:function __getAnimatedValue()

{
return this._walkStyleAndGetAnimatedValues(this._style);
}},{key:'__attach',value:function __attach()

{
for(var key in this._style){
var value=this._style[key];
if(value instanceof AnimatedNode){
value.__addChild(this);
}
}
}},{key:'__detach',value:function __detach()

{
for(var key in this._style){
var value=this._style[key];
if(value instanceof AnimatedNode){
value.__removeChild(this);
}
}
_get(AnimatedStyle.prototype.__proto__||Object.getPrototypeOf(AnimatedStyle.prototype),'__detach',this).call(this);
}},{key:'__makeNative',value:function __makeNative()

{
_get(AnimatedStyle.prototype.__proto__||Object.getPrototypeOf(AnimatedStyle.prototype),'__makeNative',this).call(this);
for(var key in this._style){
var value=this._style[key];
if(value instanceof AnimatedNode){
value.__makeNative();
}
}
}},{key:'__getNativeConfig',value:function __getNativeConfig()

{
var styleConfig={};
for(var styleKey in this._style){
if(this._style[styleKey]instanceof AnimatedNode){
styleConfig[styleKey]=this._style[styleKey].__getNativeTag();
}


}
NativeAnimatedHelper.validateStyles(styleConfig);
return{
type:'style',
style:styleConfig};

}}]);return AnimatedStyle;}(AnimatedWithChildren);


module.exports=AnimatedStyle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,